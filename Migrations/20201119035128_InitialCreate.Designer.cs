// <auto-generated />
using System;
using DAL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WebApplicationOIFUS.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20201119035128_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ENT.Ent.Contactos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("Email");

                    b.Property<DateTime?>("Fecha");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int?>("NumeroIdentificacion");

                    b.Property<string>("Observacion");

                    b.HasKey("Id");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("ENT.Ent.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Iso")
                        .HasColumnName("Iso");

                    b.Property<string>("Iso3")
                        .HasColumnName("Iso3");

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.Property<string>("NumCode")
                        .HasColumnName("NumCode");

                    b.Property<string>("PrintableName")
                        .HasColumnName("PrintableName");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ENT.Ent.Notificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaNotificaciones");

                    b.Property<string>("Imagen");

                    b.Property<string>("Notificacion");

                    b.HasKey("Id");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("ENT.Ent.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ENT.Ent.TblDiscapacidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblDiscapacidad");
                });

            modelBuilder.Entity("ENT.Ent.TblEstratoSocioEconomico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblEstratoSocioEconomico");
                });

            modelBuilder.Entity("ENT.Ent.TblEtnia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblEtnia");
                });

            modelBuilder.Entity("ENT.Ent.TblGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblGenero");
                });

            modelBuilder.Entity("ENT.Ent.TblIdentidaDeGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblIdentidaDeGenero");
                });

            modelBuilder.Entity("ENT.Ent.TblJornadaDeTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblJornadaDeTrabajo");
                });

            modelBuilder.Entity("ENT.Ent.TblLocalidadTrabaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblLocalidadTrabaja");
                });

            modelBuilder.Entity("ENT.Ent.TblLocalidadVive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblLocalidadVive");
                });

            modelBuilder.Entity("ENT.Ent.TblNivelDeEscolaridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblNivelDeEscolaridad");
                });

            modelBuilder.Entity("ENT.Ent.TblOrientacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblOrientacion");
                });

            modelBuilder.Entity("ENT.Ent.TblPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos");

                    b.Property<int?>("Edad");

                    b.Property<bool?>("EsDiscapacitado");

                    b.Property<bool?>("EsJefeHogar");

                    b.Property<bool?>("EsVictimaConflictoA");

                    b.Property<bool>("EstadoPersona");

                    b.Property<int?>("IdEstratiSocioEconomico");

                    b.Property<int?>("IdEtnia");

                    b.Property<int?>("IdGenero");

                    b.Property<int?>("IdIdentidadGenero");

                    b.Property<int?>("IdJornadaTrabajo");

                    b.Property<int?>("IdLocalidad");

                    b.Property<int?>("IdLocalidadTrabajo");

                    b.Property<int?>("IdNivielEscolaridad");

                    b.Property<int?>("IdOrientacionSexual");

                    b.Property<int?>("IdSeguridadSocial");

                    b.Property<int?>("IdSubsidios");

                    b.Property<int?>("IdTipoDiscapacidad");

                    b.Property<int?>("IdTipoDocumento");

                    b.Property<int?>("IdTipoVivienda");

                    b.Property<int?>("IdUsuario");

                    b.Property<string>("Nombres");

                    b.Property<long?>("NumeroDocumento");

                    b.Property<int?>("TblDiscapacidadId");

                    b.Property<int?>("TblEstratoSocioEconomicoId");

                    b.Property<int?>("TblEtniaId");

                    b.Property<int?>("TblGeneroId");

                    b.Property<int?>("TblIdentidaDeGeneroId");

                    b.Property<int?>("TblJornadaDeTrabajoId");

                    b.Property<int?>("TblLocalidadTrabajaId");

                    b.Property<int?>("TblLocalidadViveId");

                    b.Property<int?>("TblNivelDeEscolaridadId");

                    b.Property<int?>("TblOrientacionId");

                    b.Property<int?>("TblSeguridadSocialId");

                    b.Property<int?>("TblSubsidioId");

                    b.Property<int?>("TblTipoDeViviendaId");

                    b.Property<int?>("TblTipoDocumentoId");

                    b.Property<int?>("Telefono");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("TblDiscapacidadId");

                    b.HasIndex("TblEstratoSocioEconomicoId");

                    b.HasIndex("TblEtniaId");

                    b.HasIndex("TblGeneroId");

                    b.HasIndex("TblIdentidaDeGeneroId");

                    b.HasIndex("TblJornadaDeTrabajoId");

                    b.HasIndex("TblLocalidadTrabajaId");

                    b.HasIndex("TblLocalidadViveId");

                    b.HasIndex("TblNivelDeEscolaridadId");

                    b.HasIndex("TblOrientacionId");

                    b.HasIndex("TblSeguridadSocialId");

                    b.HasIndex("TblSubsidioId");

                    b.HasIndex("TblTipoDeViviendaId");

                    b.HasIndex("TblTipoDocumentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tblPersona");
                });

            modelBuilder.Entity("ENT.Ent.TblSeguridadSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblSeguridadSocial");
                });

            modelBuilder.Entity("ENT.Ent.TblSubsidio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblSubsidio");
                });

            modelBuilder.Entity("ENT.Ent.TblTipoDeVivienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblTipoDeVivienda");
                });

            modelBuilder.Entity("ENT.Ent.TblTipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TblTipoDocumento");
                });

            modelBuilder.Entity("ENT.Ent.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Pasword");

                    b.Property<string>("Usr")
                        .HasColumnName("Usuario");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ENT.Ent.TblPersona", b =>
                {
                    b.HasOne("ENT.Ent.TblDiscapacidad")
                        .WithMany("Personas")
                        .HasForeignKey("TblDiscapacidadId");

                    b.HasOne("ENT.Ent.TblEstratoSocioEconomico")
                        .WithMany("Personas")
                        .HasForeignKey("TblEstratoSocioEconomicoId");

                    b.HasOne("ENT.Ent.TblEtnia")
                        .WithMany("Personas")
                        .HasForeignKey("TblEtniaId");

                    b.HasOne("ENT.Ent.TblGenero")
                        .WithMany("Personas")
                        .HasForeignKey("TblGeneroId");

                    b.HasOne("ENT.Ent.TblIdentidaDeGenero")
                        .WithMany("Personas")
                        .HasForeignKey("TblIdentidaDeGeneroId");

                    b.HasOne("ENT.Ent.TblJornadaDeTrabajo")
                        .WithMany("Personas")
                        .HasForeignKey("TblJornadaDeTrabajoId");

                    b.HasOne("ENT.Ent.TblLocalidadTrabaja")
                        .WithMany("Personas")
                        .HasForeignKey("TblLocalidadTrabajaId");

                    b.HasOne("ENT.Ent.TblLocalidadVive")
                        .WithMany("Personas")
                        .HasForeignKey("TblLocalidadViveId");

                    b.HasOne("ENT.Ent.TblNivelDeEscolaridad")
                        .WithMany("Personas")
                        .HasForeignKey("TblNivelDeEscolaridadId");

                    b.HasOne("ENT.Ent.TblOrientacion")
                        .WithMany("Personas")
                        .HasForeignKey("TblOrientacionId");

                    b.HasOne("ENT.Ent.TblSeguridadSocial")
                        .WithMany("Personas")
                        .HasForeignKey("TblSeguridadSocialId");

                    b.HasOne("ENT.Ent.TblSubsidio")
                        .WithMany("Personas")
                        .HasForeignKey("TblSubsidioId");

                    b.HasOne("ENT.Ent.TblTipoDeVivienda")
                        .WithMany("Personas")
                        .HasForeignKey("TblTipoDeViviendaId");

                    b.HasOne("ENT.Ent.TblTipoDocumento")
                        .WithMany("Personas")
                        .HasForeignKey("TblTipoDocumentoId");

                    b.HasOne("ENT.Ent.Usuario")
                        .WithMany("Personas")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
